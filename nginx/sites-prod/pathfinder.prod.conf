# Pathfinder 生产环境站点配置
# HTTPS + HTTP/2 + 安全优化 + 负载均衡

# ==========================================
# HTTP 到 HTTPS 重定向
# ==========================================
server {
    listen 80;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
    
    # 安全头
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    
    # Let's Encrypt ACME 挑战
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # 强制 HTTPS 重定向
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ==========================================
# 主 HTTPS 服务器
# ==========================================
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
    
    # ==========================================
    # SSL/TLS 配置
    # ==========================================
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem;
    
    # SSL 会话配置
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    
    # HSTS 配置
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # ==========================================
    # 连接和速率限制
    # ==========================================
    limit_conn conn_limit_per_ip 50;
    limit_conn conn_limit_per_server 1000;
    
    # ==========================================
    # 日志配置
    # ==========================================
    access_log /var/log/nginx/pathfinder.access.log main buffer=64k flush=5s;
    error_log /var/log/nginx/pathfinder.error.log warn;
    
    # ==========================================
    # 根目录
    # ==========================================
    root /var/www/pathfinder;
    index index.html;
    
    # ==========================================
    # API 路由 - 后端代理
    # ==========================================
    location /api/ {
        # 速率限制
        limit_req zone=api burst=50 nodelay;
        limit_req zone=api_burst burst=100 nodelay;
        
        # CORS 处理
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $cors_header always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Request-ID' always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type 'text/plain; charset=utf-8' always;
            add_header Content-Length 0 always;
            return 204;
        }
        
        # 代理到后端集群
        proxy_pass http://pathfinder_backend;
        
        # 请求头设置
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-User-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket 支持
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_authorization $cookie_sessionid;
        
        # 响应头处理
        add_header Access-Control-Allow-Origin $cors_header always;
        add_header X-Request-ID $request_id always;
        add_header X-Response-Time $upstream_response_time always;
        
        # 错误处理
        error_page 502 503 504 /api-error.html;
    }
    
    # ==========================================
    # 认证 API - 特殊限制
    # ==========================================
    location ~ ^/api/(auth|login|register) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://pathfinder_backend;
        
        # 增强安全头
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        # 日志记录
        access_log /var/log/nginx/auth.log main;
    }
    
    # ==========================================
    # WebSocket 连接 - AI 聊天和实时功能
    # ==========================================
    location /ws/ {
        proxy_pass http://pathfinder_backend;
        
        # WebSocket 代理配置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        
        # WebSocket 超时配置
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 10s;
        
        # 缓存禁用
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        
        # 错误处理
        proxy_next_upstream off;
    }
    
    # ==========================================
    # 文件上传处理
    # ==========================================
    location /api/upload {
        limit_req zone=api burst=10 nodelay;
        
        # 增大上传限制
        client_max_body_size 100m;
        client_body_timeout 300s;
        
        proxy_pass http://pathfinder_backend;
        proxy_request_buffering off;
        
        # 上传超时
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # ==========================================
    # 静态资源处理 - 前端代理
    # ==========================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        # 长期缓存
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 压缩静态文件
        gzip_static on;
        
        # 代理到前端
        proxy_pass http://pathfinder_frontend;
        proxy_cache static_cache;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_revalidate on;
        
        # 缓存头
        add_header X-Cache-Status $upstream_cache_status;
        
        # 错误处理
        error_page 404 /404.html;
    }
    
    # ==========================================
    # 前端应用路由 - SPA 支持
    # ==========================================
    location / {
        # 首先尝试文件，然后目录，最后回退到 index.html
        try_files $uri $uri/ @fallback;
        
        # 代理到前端容器
        proxy_pass http://pathfinder_frontend;
        proxy_cache pathfinder_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_bypass $http_cache_control;
        
        # HTML 文件不缓存
        location ~* \.html$ {
            proxy_pass http://pathfinder_frontend;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
    
    # SPA 回退处理
    location @fallback {
        proxy_pass http://pathfinder_frontend/;
        proxy_set_header X-Original-URI $request_uri;
        
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # ==========================================
    # 健康检查端点
    # ==========================================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache";
    }
    
    location /api-health {
        access_log off;
        proxy_pass http://pathfinder_backend/api/health;
        proxy_cache_bypass 1;
    }
    
    # ==========================================
    # 管理端点（受限访问）
    # ==========================================
    location /admin {
        # IP 白名单
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        # 基础认证
        auth_basic "Admin Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://pathfinder_backend/admin;
    }
    
    # ==========================================
    # 机器人和爬虫处理
    # ==========================================
    location /robots.txt {
        alias /var/www/pathfinder/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    location /sitemap.xml {
        alias /var/www/pathfinder/sitemap.xml;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # ==========================================
    # 安全和优化
    # ==========================================
    
    # 隐藏敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~* \.(bak|backup|swp|tmp|old|orig|save)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止直接访问配置文件
    location ~* \.(conf|config|ini|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ==========================================
    # 错误页面
    # ==========================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    error_page 429 /429.html;
    
    location = /404.html {
        root /var/www/errors;
        internal;
    }
    
    location = /50x.html {
        root /var/www/errors;
        internal;
    }
    
    location = /429.html {
        root /var/www/errors;
        internal;
        add_header Retry-After 300;
    }
    
    location = /api-error.html {
        root /var/www/errors;
        internal;
        add_header Content-Type application/json;
    }
}

# ==========================================
# WebSocket 连接升级映射
# ==========================================
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# ==========================================
# API 子域名（可选）
# ==========================================
server {
    listen 443 ssl http2;
    server_name api.${DOMAIN_NAME};
    
    # SSL 配置
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
    
    # 直接代理到后端
    location / {
        limit_req zone=api burst=100 nodelay;
        proxy_pass http://pathfinder_backend/api/;
        
        # CORS 配置
        add_header Access-Control-Allow-Origin $cors_header always;
    }
}