# Pathfinder 日志收集配置 (Fluentd)

# ==========================================
# 系统配置
# ==========================================
<system>
  log_level info
  suppress_repeated_stacktrace true
  emit_error_log_interval 30s
  suppress_config_dump
  without_source
</system>

# ==========================================
# HTTP 输入源 (用于应用程序日志)
# ==========================================
<source>
  @type http
  @id input_http
  port 9880
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
</source>

# ==========================================
# Nginx 访问日志
# ==========================================
<source>
  @type tail
  @id input_nginx_access
  path /var/log/nginx/access.log
  pos_file /var/log/fluentd/nginx_access.log.pos
  tag nginx.access
  format nginx
  read_from_head true
  refresh_interval 10s
</source>

# ==========================================
# Nginx 错误日志
# ==========================================
<source>
  @type tail
  @id input_nginx_error
  path /var/log/nginx/error.log
  pos_file /var/log/fluentd/nginx_error.log.pos
  tag nginx.error
  format /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
  read_from_head true
  refresh_interval 10s
</source>

# ==========================================
# PostgreSQL 日志
# ==========================================
<source>
  @type tail
  @id input_postgresql
  path /var/log/postgresql/postgresql-*.log
  pos_file /var/log/fluentd/postgresql.log.pos
  tag postgresql.log
  format multiline
  format_firstline /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}/
  format1 /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}) (?<timezone>\w+) \[(?<pid>\d+)\] (?<user>[^@]*)@(?<database>\w+) (?<level>\w+):  (?<message>.*)$/
  read_from_head true
  refresh_interval 10s
</source>

# ==========================================
# Docker 容器日志
# ==========================================
<source>
  @type tail
  @id input_docker_pathfinder_backend
  path /var/lib/docker/containers/pathfinder-backend*/pathfinder-backend*-json.log
  pos_file /var/log/fluentd/docker_backend.log.pos
  tag docker.pathfinder.backend
  format json
  read_from_head true
  refresh_interval 10s
</source>

<source>
  @type tail
  @id input_docker_pathfinder_frontend
  path /var/lib/docker/containers/pathfinder-frontend*/pathfinder-frontend*-json.log
  pos_file /var/log/fluentd/docker_frontend.log.pos
  tag docker.pathfinder.frontend
  format json
  read_from_head true
  refresh_interval 10s
</source>

# ==========================================
# 应用程序自定义日志
# ==========================================
<source>
  @type tail
  @id input_app_logs
  path /app/logs/*.log
  pos_file /var/log/fluentd/app.log.pos
  tag app.pathfinder
  format json
  read_from_head true
  refresh_interval 5s
</source>

# ==========================================
# 日志处理和过滤
# ==========================================

# 解析 Nginx 访问日志
<filter nginx.access>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type nginx
    expression /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")? (?<request_time>[^ ]*) (?<upstream_time>[^ ]*)$/
    time_format %d/%b/%Y:%H:%M:%S %z
  </parse>
</filter>

# 为 Nginx 访问日志添加地理信息
<filter nginx.access>
  @type geoip
  geoip_lookup_keys remote
  <record>
    city            ${city.names.en["remote"]}
    country         ${country.names.en["remote"]}
    country_code    ${country.iso_code["remote"]}
    longitude       ${location.longitude["remote"]}
    latitude        ${location.latitude["remote"]}
  </record>
  skip_adding_null_record true
</filter>

# 添加环境标签
<filter **>
  @type record_transformer
  <record>
    environment production
    service pathfinder
    version "#{ENV['APP_VERSION'] || 'unknown'}"
    hostname "#{Socket.gethostname}"
  </record>
</filter>

# 日志采样 (减少非关键日志量)
<filter nginx.access>
  @type sampling
  sampling_rate 10
  <exclude>
    path ["/api/health", "/health", "/metrics"]
  </exclude>
</filter>

# 检测和标记错误日志
<filter **>
  @type grep
  <regexp>
    key level
    pattern ^(error|ERROR|fatal|FATAL|critical|CRITICAL)$
  </regexp>
  <record>
    alert_level critical
  </record>
</filter>

# ==========================================
# 输出配置
# ==========================================

# 输出到 Elasticsearch
<match **>
  @type elasticsearch
  @id out_es
  host elasticsearch
  port 9200
  logstash_format true
  logstash_prefix pathfinder
  logstash_dateformat %Y.%m.%d
  
  # 索引设置
  index_name pathfinder-logs
  type_name _doc
  
  # 性能优化
  bulk_message_request_threshold 1048576
  bulk_message_flush_interval 30s
  chunk_limit_size 20MB
  queue_limit_length 4096
  flush_interval 10s
  retry_limit 3
  reload_connections false
  reconnect_on_error true
  reload_on_failure true
  
  # 缓冲配置
  <buffer tag,time>
    @type file
    path /var/log/fluentd/buffer/elasticsearch
    timekey 1h
    timekey_wait 10m
    timekey_use_utc true
    chunk_limit_size 50MB
    total_limit_size 2GB
    flush_mode interval
    flush_interval 30s
    flush_thread_count 2
    retry_type exponential_backoff
    retry_wait 1s
    retry_max_interval 60s
    retry_timeout 60m
  </buffer>
</match>

# 备份输出到文件
<match **>
  @type copy
  <store>
    @type file
    @id out_file_backup
    path /var/log/fluentd/backup/pathfinder.%Y-%m-%d
    append true
    time_slice_format %Y%m%d
    compress gzip
    <format>
      @type json
    </format>
    <buffer time>
      timekey 1d
      timekey_wait 10m
      flush_mode interval
      flush_interval 30s
    </buffer>
  </store>
</match>

# 关键错误日志立即发送到告警系统
<match **>
  @type grep
  <regexp>
    key alert_level
    pattern critical
  </regexp>
  <store>
    @type slack
    webhook_url "#{ENV['SLACK_WEBHOOK_URL']}"
    channel "#alerts"
    username "FluentdBot"
    icon_emoji ":warning:"
    title "Pathfinder Critical Log Alert"
    message "Critical log detected: %s"
    message_keys ["message"]
    flush_interval 1s
  </store>
</match>