Pathfinder 需求规格说明书
第1章：引⾔ (Introduction) - 详细版
1.1 ⽂档⽬的 (Purpose of this Document)
本⽂档是“转化路径扫描仪 (Pathfinder)” V1.0 版本的官⽅需求规格说明书。其核⼼⽬的在于：
明确定义: 清晰、⽆歧义地阐述产品的核⼼价值、⽬标⽤户、功能范围及关键的⾮功能性要求。
统⼀共识: 作为产品开发团队、测试团队、项⽬管理者及其他关键利益相关⽅之间沟通的基⽯，确保所有⼈对
即将开发的产品有统⼀且准确的理解。
⾏动指南: 本⽂档将作为后续产品设计、敏捷开发冲刺规划、测试⽤例编写以及最终项⽬验收的单⼀事实来源
(Single Source of Truth)。
1.2 项⽬背景与问题陈述 (Background and Problem Statement)
1.2.1 当前状态 (Current State):
在当前的商业环境下，中⼩企业（SME）在数字化的浪潮中普遍⾯临 “有增⻓焦虑，⽆增⻓罗盘” 的困境。他们深刻
理解提升销售转化率的重要性，但其⽇常运营和决策过程严重依赖创始⼈的经验和销售团队的直觉，缺乏科学的数
据⽀撑体系。
1.2.2 核⼼问题 (Core Problems):
我们发现，这种困境具体表现为以下三个环环相扣的难题：
问题⼀：决策⿊盒 (The Decision-Making Black Box)
销售流程如同⼀个⿊盒。企业主能看到最终的“签单数”（输出），也能看到“投⼊的线索数”（输⼊），但对于
线索在中间各个环节如何流转、在哪⾥⼤量“蒸发”，则完全不清楚。决策往往基于“我感觉”、“我觉得”，⽽⾮
客观数据。
问题⼆：归因困难 (Difficulty in Attribution)
当销售业绩下滑时，⽆法进⾏有效归因。问题究竟是出在⼴告投放的线索质量差？是销售的邀约话术不⾏？还
是产品演示不够吸引⼈？由于缺乏分阶段的量化数据，所有问题都混为⼀谈，难以定位。
问题三：资源错配 (Misallocation of Resources)
基于模糊的判断，企业投⼊了⼤量资源进⾏优化，但往往收效甚微。例如，花费数万元进⾏泛泛的销售技巧培
训，⽽实际上团队最⼤的问题可能仅仅是“如何成功邀约客户进⾏线上会议”这⼀特定环节。资源没有被⽤在⼑
刃上。
1.2.3 造成的影响 (Impact):
以上问题直接导致了预算浪费、团队⼠⽓低落、增⻓机会错失，并最终限制了企业的规模化发展潜⼒。
1.3 产品愿景与使命 (Product Vision and Mission)
1.3.1 愿景 (Vision):
成为中⼩企业最信赖的数字增⻓探照灯。我们的终极⽬标是，将企业混乱、模糊的客户旅程，转变为⼀张清晰、可
交互、可优化的动态增⻓地图。
1.3.2 使命 (Mission):
Pathfinder V1.0 的使命是带领中⼩企业完成从0到1的认知升级，通过以下三步实现：
第⼀步：结构化诊断 (Structured Diagnosis)
帮助企业⾸次将他们脑海中的销售流程，⽤可视化的⽅式在我们的产品中“画”出来，建⽴起⼀个可供分析的结
构化框架。
第⼆步：量化瓶颈 (Quantify Bottlenecks)
通过最简单的⼿动数据录⼊，帮助企业量化每个环节的转化效率，并⾃动识别出流失最严重的关键瓶颈，将
“感觉”变为“数据”。
第三步：精准赋能 (Precise Empowerment)
针对识别出的具体瓶颈，提供直接关联的AI赋能⼯具（如AI陪练），让企业能够⽴刻对症下药，进⾏有针对性
的改进。
1.4 V1.0 产品范围 (Scope for V1.0)
为确保快速验证核⼼价值并控制开发成本，V1.0版本将严格聚焦于以下范围：
1.4.1 核⼼交付物 (In Scope):
⼀个单⽤户、基于Web的SaaS应⽤程序，⽀持主流桌⾯浏览器（Chrome, Firefox, Edge）。
⼀个可视化的漏⽃建模⼯具，⽀持节点的拖拽、连接和⾃定义命名。
⼀个⼿动的、以⾃然周为单位的数据录⼊机制，⽤于捕获各节点的转化数据。
⼀个能⾃动计算并以视觉⾼亮⽅式呈现“最⼤流失率”节点的分析引擎。
⼀个与“邀约”场景深度绑定的、基于第三⽅⼤语⾔模型API（如Gemini, GPT）的初级AI话术陪练模块。
基础的⽤户账户系统（注册、登录、密码管理）。
1.4.2 明确排除项 (Out of Scope):
第三⽅数据集成: V1.0不包含任何与外部系统（例如，企业微信、钉钉、⻜书CRM、各类⼴告平台）的API对
接与数据⾃动同步功能。
多⽤户协作: V1.0为单⼈使⽤设计，不包含团队管理、⻆⾊权限分配、多⽤户视图等功能。
⾼级数据分析: 不提供复杂的BI仪表盘、历史数据趋势分析、同期群分析、⾃定义报表等⾼级分析功能。
A/B测试框架: 不⽀持对不同话术、流程或优惠进⾏分组对⽐测试的功能。
移动端应⽤: V1.0版本不提供原⽣或响应式的移动端应⽤程序。
1.5 名词解释 (Glossary)
为避免歧义，本⽂档中使⽤的关键术语定义如下：
漏⽃ (Funnel): 指⼀个由多个“节点”按顺序组成的、代表完整客户旅程（从接触到成交）的可视化模型。
节点 (Node): 漏⽃中的⼀个具体、可测量的阶段。例如：“添加微信”、“进⾏产品演示”、“发送报价单”。
连接 (Edge): 在漏⽃中连接两个节点的有向箭头，代表了⽤户从⼀个节点到下⼀个节点的流转路径。转化率和
流失率的计算与显示都发⽣在此“连接”上。
转化率 (Conversion Rate): 从⼀个节点成功进⼊下⼀个节点的⽤户的百分⽐。其计算公式为：
转化率=(进⼊本节点的⽤户数进⼊下⼀节点的⽤户数)×100%
流失率 (Churn Rate): 未能从⼀个节点进⼊下⼀个节点的⽤户的百分⽐。其计算公式为：
流失率=100%−转化率
AI陪练 (AI Coach): ⼀款内嵌于产品中的⼈⼯智能聊天机器⼈，它通过模拟特定的对话场景（如客户拒绝邀
约、提出价格异议等），来帮助⽤户进⾏互动式演练，从⽽提升其沟通与销售技巧。
第2章：⽤户画像与场景 (User Personas & Scenarios) - 详细版
2.1 ⽤户画像 (User Personas)
为了确保产品能解决真实世界的问题，我们构建了两个核⼼⽤户画像：代表战略决策层的“张总”和代表战术执⾏层
的“李经理”。
2.1.1 核⼼决策者画像：张总 (Primary Persona: CEO Zhang)
基本信息:
姓名: 张建国 (Jianguo Zhang)
年龄: 38岁
⻆⾊: 创始⼈ & CEO
公司: 云启科技 (⼀家30⼈规模，提供SaaS营销⼯具的公司)
技术背景: 技术出身，对产品和研发有深刻理解，但对销售管理的体系化运作相对陌⽣。
背景故事:
张总是⼀位典型的技术型创业者。他带领团队打磨出了优秀的产品，但随着公司进⼊市场扩张阶段，他发现⾃
⼰必须亲⾃抓销售。他对销售管理的认知主要停留在设定业绩⽬标和开会督促进度上，感觉⾃⼰陷⼊了“增⻓
的迷雾”，有⼒使不出。
⼯作⽬标 (Goals - "Jobs to be Done"):
业务层⾯: 持续提升公司的⽉度经常性收⼊ (MRR)；降低客户获取成本 (CAC)。
管理层⾯: 让每周的销售例会变得⾼效且有结论，⽽不是“牢骚⼤会”；清晰地了解市场预算的投⼊产出⽐
(ROI)。
个⼈层⾯: 缓解对公司未来增⻓不确定性的焦虑；在销售管理领域建⽴⾃信，成为更全⾯的CEO。
核⼼痛点 (Pain Points) (以⽤户⼝吻表达):
“每个销售都说⾃⼰尽⼒了，客户意向不强，但我总感觉哪⾥不对劲，⼜说不上来。复盘会议变成了找借
⼝，效率极低。”
“上个⽉花5万块投了⼴告，来了200个线索，最后只签了2单。这钱花得值不值？是线索质量问题还是销
售能⼒问题？我完全没数。”
“我想帮助销售团队成⻓，但除了喊加油、给压⼒，我不知道该从何⼊⼿。买来的通⽤培训课程，感觉像
隔靴搔痒。”
Pathfinder对他的价值主张:
Pathfinder是张总的 “商业X光机”。它不能直接替他治病，但能让他史⽆前例地看清“病灶”所在。产品通过将
模糊的销售流程转化为可视化的、可量化的漏⽃，直接回答了他最关⼼的问题：“我的钱和时间，到底浪费在
了哪⾥？” 这让他能够基于事实⽽⾮感觉做出决策，极⼤地提升了他的掌控感和决策效率。
2.1.2 核⼼执⾏者画像：李经理 (Secondary Persona: Manager Li)
基本信息:
姓名: 李静 (Jing Li)
年龄: 28岁
⻆⾊: 销售经理 (直接向张总汇报)
背景: 从公司的王牌销售（Top Sales）晋升⽽来，个⼈销售能⼒极强。
背景故事:
李经理对如何搞定客户了如指掌，但对于如何管理⼀个5⼈销售团队却感到吃⼒。她发现，⾃⼰成功的经验和
“销售感觉”很难被复制到团队其他成员身上，尤其是新员⼯。
⼯作⽬标 (Goals - "Jobs to be Done"):
团队层⾯: 带领团队完成季度销售指标；将新员⼯的成⻓周期（从⼊职到稳定开单）从3个⽉缩短到1.5个
⽉。
执⾏层⾯: 找到团队中最有效的销售话术和流程，并进⾏标准化推⼴；进⾏⾼效的、有针对性的1对1辅
导。
个⼈层⾯: 证明⾃⼰不仅是优秀的销售，更是合格的管理者；获得团队成员的信服。
核⼼痛点 (Pain Points) (以⽤户⼝吻表达):
“团队⾥，⼩王在‘产品演示’环节总是丢单，⽽⼩陈则是‘邀约’客户的成功率特别低。我没法给他们提供标
准化的、能解决各⾃问题的培训。”
“我把我搞定客户的经验总结成⽂档发给他们，但他们要么不看，要么看了也学不会，实践中还是⽼样
⼦。”
“开周会复盘，最后总变成‘甩锅⼤会’，销售说线索质量差，市场说销售跟进不⼒。因为没有数据，谁也说
服不了谁。”
Pathfinder对她的价值主张:
Pathfinder是李经理的 “精准⼿术⼑”。它帮助李经理将团队管理的颗粒度，从“整个团队的业绩”，细化到“某个
环节”、“某个⼈的具体问题”。当系统明确指出“邀约环节是最⼤瓶颈”时，她就可以⽴即使⽤配套的“AI邀约陪
练”⼯具组织针对性训练。这让她的管理⼯作从“凭经验的艺术”变为“有据可依的科学”，极⼤地提升了她的管理
效率和权威性。
2.2 核⼼⽤户旅程地图 (Key User Journey Map)
本旅程以 李经理 为主视⻆，展示了Pathfinder如何在⼀个完整的业务周期中创造价值。
阶段⼀：发现与认知 (Stage 1: Discovery & Awareness)
⽤户⾏为: CEO张总在参加⼀次⾏业分享会后，对“数据驱动销售”产⽣了浓厚兴趣。他要求李经理寻找相关⼯
具。李经理通过⽹络搜索，发现了Pathfinder，其“先诊断、后优化”的理念吸引了她。
⽤户思考/感受: “这个⼯具好像不是让我们买⼀堆复杂的CRM功能，⽽是先帮我们把问题找出来。听起来很对
路，可以免费试试。”
阶段⼆：初次使⽤与建模 (Stage 2: Onboarding & Modeling)
⽤户⾏为: 李经理注册账号后，根据系统的引导，进⼊画布界⾯。她与团队成员简单讨论后，花了15分钟，拖
拽节点创建了公司的标准销售漏⽃：“市场线索 -> 电话初筛 -> 添加微信 -> 产品演示 -> 发送报价 -> 商务谈判 -
> 签约回款”。
⽤户思考/感受: “这个建模过程⽐我想象的还简单，⽐⽤Visio画图快多了。第⼀次这么清晰地看到我们完整的
客户路径，团队成员也觉得⼀⽬了然。”
Pathfinder触点: 简洁的注册流程，直观的漏⽃建模器（Funnel Modeler）。
阶段三：数据录⼊与瓶颈发现 (Stage 3: Data Entry & Bottleneck Discovery)
⽤户⾏为: 在周⼀的销售例会上，李经理让⼤家报上周的数据，她现场将数据录⼊Pathfinder。系统瞬间在漏
⽃图上完成了计算，并⽤醒⽬的红⾊⾼亮了“添加微信 -> 产品演示”这⼀环节，旁边显示“流失率: 68%”。
⽤户思考/感受: (内⼼⼀惊) “原来问题出在这⾥！我们有⼤量加了微信的客户，但都没能成功约到演示。我⼀
直以为是初筛的问题。这下开会不⽤争论了，问题就在眼前。”
Pathfinder触点: 数据录⼊模态框（Data Entry Modal），洞察雷达（Insight Radar）的⾃动⾼亮功能。
阶段四：AI赋能与采取⾏动 (Stage 4: AI Empowerment & Action)
⽤户⾏为: 李经理点击红⾊⾼亮节点旁的“AI优化建议”按钮，启动了“AI邀约陪练”模块。她当场让邀约成功率最
低的⼩陈，对着AI进⾏了⼀次模拟邀约。AI模拟客户提出了⼏个尖锐的拒绝理由，让⼩陈⼀时语塞。
⽤户思考/感受: “这个AI陪练太有⽤了！⽐我亲⾃去模拟还节省时间，⽽且可以反复练习。我要求团队⾥负责
邀约的同事，本周每⼈⾄少⽤它练习20次。”
Pathfinder触点: AI赋能模块（AI Coach）。
阶段五：追踪验证与价值体现 (Stage 5: Tracking & Value Realization)
⽤户⾏为: 两周后，在⼜⼀次例会上，李经理输⼊了最新的数据。⼤家惊喜地发现，“添加微信 -> 产品演示”环
节的流失率已经从68%下降到了45%。李经理将“优化前/后”的对⽐图截屏，发在了公司管理群。
⽤户思考/感受: “我们的努⼒有了回报，⽽且是⾁眼可⻅、数据可证的回报！团队的信⼼都增强了。” CEO张总
看到截图后，⽴刻回复：“⼲得漂亮！下个季度给你们加预算，把这个⼯具的付费版买了。”
Pathfinder触点: 整个产品闭环所带来的，清晰可⻅的ROI。
第3章：功能性需求 (Functional Requirements) - 详细版
第3章：功能性需求 (Functional Requirements) - 详细版
本章节详细定义了 Pathfinder V1.0 的所有功能模块、⽤户交互和系统⾏为，是开发与测试的直接依据。
3.1 模块⼀：漏⽃建模器 (Funnel Modeler)
⽬标: 为⽤户提供⼀个灵活、直观的所⻅即所得（WYSIWYG）画布，使其能够将抽象的营销流程具象化。
FR-1.1: 画布创建与管理 (Canvas Creation & Management)
1. FR-1.1.1: ⽤户⾸次登录或⽆任何漏⽃时，主界⾯应显示⼀个醒⽬的“创建我的第⼀个转化漏⽃”按钮。
2. FR-1.1.2: 若⽤户已有漏⽃，仪表盘应以卡⽚形式罗列所有已创建的漏⽃，并提供“新建漏⽃”按钮。
3. FR-1.1.3: 点击创建后，系统⽣成⼀个⽆限⼤的画布区域。⽤户可以通过⿏标中键或触摸板⼿势进⾏拖拽平移
（Pan），通过滚轮进⾏缩放（Zoom）。
FR-1.2: 节点库与属性 (Node Library & Properties)
1. FR-1.2.1: 画布界⾯的左侧应有⼀个固定的侧边栏，作为“节点库”。
2. FR-1.2.2: 节点库中需提供⾄少5种预设的、有业务含义的节点图标，例如：
 (眼睛图标): 品牌曝光/意识 (Awareness)
 (⿏标点击图标): 流量获取/点击 (Acquisition)
 (握⼿图标): ⽤户激活/留资 (Activation)
 (⾦钱图标): 营收/成交 (Revenue)
 (⼼形图标): 留存/推荐 (Retention)
3. FR-1.2.3: 每个节点在系统中必须具备以下属性：
node_id : 系统⽣成的唯⼀标识符 (UUID)。
node_type : 节点类型（对应 FR-1.2.2 中的⼀种）。
position : 节点在画布上的坐标 {x, y}。
label : ⽤户可编辑的⽂本标签，字符串类型，最⼤⻓度为30个字符，初始值为“新节点”。
FR-1.3: 核⼼交互逻辑 (Core Interaction Logic)
1. FR-1.3.1 - 拖放节点: ⽤户可从左侧节点库中按住任⼀节点图标，将其拖拽⾄画布的任意位置后释放，即可创
建⼀个新的节点实例。
2. FR-1.3.2 - 节点编辑:
单击: 选中节点，节点周围应出现8个控制点（⽤于未来调整⼤⼩）和蓝⾊边框，表示当前处于选中状
态。
双击: 直接进⼊该节点的标签（label）编辑模式，允许⽤户修改⽂本。
3. FR-1.3.3 - 节点删除: 选中⼀个节点后，⽤户可以按 Delete 键或点击节点右上⻆出现的 (X) 图标来删除该节
点。删除前，必须弹出⼀个确认对话框：“您确定要删除‘[节点标签]’吗？所有与该节点关联的数据将⼀并被永
久删除。”
FR-1.4: 节点连接 (Node Connection)
1. FR-1.4.1: 当⿏标悬停在⼀个未被选中的节点上时，该节点的上、下、左、右四个⽅向应出现⼩的圆形连接
点。
2. FR-1.4.2: ⽤户可从⼀个节点的连接点上按下⿏标左键并拖拽，拉出⼀条箭头线，将其连接到另⼀个节点的⽬
标连接点上后释放，即可创建⼀条有向连接。
3. FR-1.4.3: 单击连接线可将其选中（变为蓝⾊⾼亮），此时按 Delete 键可删除该连接。
FR-1.5: 保存与加载 (Save & Load)
1. FR-1.5.1: 画布右上⻆应有⼀个“保存”按钮。当画布内容发⽣任何变更（节点增删、移动、连接）后，该按钮
应从未激活状态（灰⾊）变为激活状态（蓝⾊）。
2. FR-1.5.2: 点击“保存”后，系统应向后端发送 POST /api/funnels/{funnel_id} 请求，请求体为⼀个包含所
有节点信息（ID, 类型, 位置, 标签）和连接信息（源节点ID, ⽬标节点ID）的JSON对象。
3. FR-1.5.3: ⽤户打开⼀个已存在的漏⽃时，系统通过 GET /api/funnels/{funnel_id} 获取其JSON数据，并
在前端画布上精确地重新渲染出完整的漏⽃结构。
3.2 模块⼆：数据录⼊ (Data Entry)
⽬标: 提供⼀个简单、防错的界⾯，让⽤户能够快速、准确地为每个漏⽃节点录⼊关键业务数据。
FR-2.1: 触发与界⾯ (Trigger & Interface)
1. FR-2.1.1: ⽤户可通过双击⼀个已创建的节点来触发数据录⼊界⾯。
2. FR-2.1.2: 触发后，系统应弹出⼀个模态框（Modal）。模态框的标题应为：“编辑 ‘[节点标签]’ 的数据”。
FR-2.2: 输⼊字段与校验 (Input Fields & Validation)
1. FR-2.2.1: 模态框内包含两个核⼼输⼊字段：
进⼊⼈数 (Entry Count): 数字输⼊框，只允许输⼊⾮负整数。
转化⼈数 (Converted Count): 数字输⼊框，只允许输⼊⾮负整数。
2. FR-2.2.2 - 实时校验: 在⽤户输⼊过程中，系统需进⾏实时校验： 转化⼈数 的值不能⼤于 进⼊⼈数 。若不满
⾜， 转化⼈数 输⼊框下⽅应出现红⾊错误提示：“转化⼈数不能超过进⼊⼈数”，且“保存”按钮置灰不可⽤。
FR-2.3: 时间周期 (Time Period)
1. FR-2.3.1: V1.0 版本为了简化操作，不提供复杂的时间选择器。系统将⾃动以“周”为单位进⾏数据记录。
2. FR-2.3.2: 数据录⼊模态框的顶部应明确显示当前数据所属的周期，例如：“数据周期: 2025年8⽉11⽇ - 2025
年8⽉17⽇”。
FR-2.4: 数据提交 (Data Submission)
1. FR-2.4.1: 模态框右下⻆有⼀个“保存”按钮。当所有数据校验通过时，该按钮为可点击状态。
2. FR-2.4.2: 点击“保存”后，向后端发送 POST /api/nodes/{node_id}/data 请求。请求体为 {
"week_start_date": "2025-08-11", "entry_count": 100, "converted_count": 80 } 。
3. FR-2.4.3: 保存成功后，模态框关闭，画布上的漏⽃数据应⽴即刷新，以反映最新的录⼊情况。
第4章：⾮功能性需求 (Non-Functional Requirements) - 详细
版
4.1 性能需求 (Performance Requirements)
性能是⽤户对产品最直观的感受之⼀。V1.0版本旨在提供流畅、⽆卡顿的基础体验。
NFR-4.1.1 - ⻚⾯加载速度 (Page Load Speed):
⽬标: ⾸次访问应⽤时，主应⽤框架（不含动态数据）的完全加载时间（Fully Loaded）在正常⽹络条件（5
Mbps）下应⼩于 3秒。
实现建议: 采⽤代码分割（Code Splitting）、资源压缩（Gzip/Brotli）、CDN加速静态资源等前端优化技
术。
NFR-4.1.2 - 交互响应时间 (Interaction Response Time):
⽬标: 所有核⼼⽤户交互必须提供即时反馈。
⾼频交互 (如拖拽节点、点击按钮、输⼊⽂本): 视觉反馈时间应⼩于 100毫秒，⽤户⼏乎感觉不到延迟。
数据密集型操作 (如保存漏⽃、提交节点数据): 从点击到收到成功/失败的明确反馈，时间应⼩于 1秒。在
此期间，界⾯应显示加载中（Loading）状态，防⽌⽤户重复操作。
NFR-4.1.3 - API响应时间 (API Response Time):
⽬标: 后端所有API接⼝，在正常负载下，95百分位（P95）的响应时间应⼩于 500毫秒。
约束: 此⽬标不包含调⽤第三⽅AI模型API的时间，仅指应⽤服务器⾃身的处理时间。
NFR-4.1.4 - 并发处理能⼒ (Concurrency Handling):
⽬标: V1.0作为单⽤户系统，暂不设定⾼并发⽬标。但系统设计应能稳定⽀持⾄少 50个 模拟⽤户的并发访问
⽽不会出现服务崩溃或显著性能下降，以应对初期的种⼦⽤户增⻓。
4.2 可⽤性需求 (Usability Requirements)
可⽤性确保⽬标⽤户能够轻松、⾼效且满意地使⽤产品，以达成他们的⽬标。
NFR-4.2.1 - 易学性 (Learnability):
⽬标: ⼀个符合我们核⼼⽤户画像（如李经理）的新⽤户，在未经任何培训、仅依靠界⾯引导的情况下，应能
在 5分钟内 独⽴完成⾸次核⼼任务：创建⾄少包含3个节点的漏⽃，并为其中⼀个节点成功录⼊数据。
实现建议: 在关键功能旁提供简短的提示性⽂字或图标；⾸次登录时提供⼀个简短（不超过4步）的产品导览
（Product Tour）。
NFR-4.2.2 - 效率 (Efficiency):
⽬标: 对于熟练⽤户，完成⼀次“更新本周所有节点数据”的常规任务（以5个节点的漏⽃为例），总时⻓应不超
过 3分钟。
实现建议: 优化操作路径，减少不必要的点击；合理使⽤键盘快捷键（如 Ctrl/Cmd + S 保存）。
NFR-4.2.3 - 容错性 (Error Tolerance):
⽬标: ⽤户的误操作不应导致灾难性后果或数据丢失。
关键删除操作: 如删除漏⽃、删除节点，必须提供⼀个明确的、可撤销的⼆次确认对话框。
输⼊错误: 对于格式错误的输⼊（如在数字框输⼊⽂本），应提供清晰、友好的错误提示信息，并指出修
正⽅法，⽽不是仅显示⼀个红框。
会话保持: 短暂的⽹络中断或刷新⻚⾯后，⽤户应能保持登录状态，且未保存的画布内容应尝试从本地缓
存恢复。
4.3 可靠性需求 (Reliability Requirements)
可靠性指产品在规定条件下、规定时间内，完成规定功能的能⼒。
NFR-4.3.1 - 系统可⽤性 (System Availability):
⽬标: V1.0 版本的核⼼服务（包括Web应⽤和API）⽉度可⽤性应达到 99.5%。这意味着每⽉的计划外停机时
间不得超过约3.6⼩时。
约束: 此可⽤性不包含已声明的计划内维护停机时间，以及第三⽅服务（如云服务商、AI API提供商）的故障
时间。
NFR-4.3.2 - 数据持久性与完整性 (Data Durability & Integrity):
⽬标: ⽤户创建的所有数据（漏⽃结构、节点数据等）必须被安全、持久地存储。
实现建议: 采⽤具有⾼可靠性的数据库服务（如PostgreSQL），并启⽤定期的⾃动备份策略（⾄少每⽇⼀
次）。所有数据库写⼊操作都应具备事务性，保证数据的⼀致性。
4.4 安全需求 (Security Requirements)
对于SaaS应⽤，安全是⽤户的基本信任底线。
NFR-4.4.1 - 身份认证与授权 (Authentication & Authorization):
⽬标: ⽤户的账户必须受到保护。
密码策略: ⽤户密码在数据库中必须使⽤强哈希算法（如Bcrypt）加盐存储，绝不能存储明⽂密码。
会话管理: 使⽤安全的、基于Token（如JWT）的会话机制，并设置合理的过期时间。
访问控制: 确保⽤户只能访问和修改属于⾃⼰账户的数据，API层⾯必须对每⼀个请求进⾏严格的权限校
验。
NFR-4.4.2 - 数据传输安全 (Data-in-Transit Security):
⽬标: 客户端与服务器之间的所有数据通信必须加密。
实现建议: 全站强制启⽤HTTPS (TLS 1.2或更⾼版本)。
NFR-4.4.3 - 防护措施 (Protection Measures):
⽬标: 系统应具备抵御常⻅Web攻击的能⼒。
实现建议:
防SQL注⼊: 所有数据库查询必须使⽤参数化查询或ORM，严禁拼接SQL字符串。
防XSS攻击: 对所有⽤户输⼊并将在前端显示的内容进⾏适当的转义处理。
依赖库安全: 定期扫描项⽬依赖的第三⽅库，及时修复已知的安全漏洞。
4.5 兼容性需求 (Compatibility Requirements)
NFR-4.5.1 - 浏览器兼容性 (Browser Compatibility):
⽬标: 产品应在以下主流桌⾯浏览器的最新两个正式版本上提供⼀致的功能和视觉体验：
Google Chrome
Mozilla Firefox
Microsoft Edge
约束: 不承诺⽀持Internet Explorer或⾮主流浏览器。
4.6 可维护性需求 (Maintainability Requirements)
NFR-4.6.1 - 代码质量 (Code Quality):
⽬标: 代码应易于理解、修改和扩展。
实现建议: 遵循统⼀的编码规范（如ESLint规则）；关键业务逻辑和复杂算法必须有清晰的注释；代码重复率
（Code Duplication）应控制在5%以下。
NFR-4.6.2 - ⽇志与监控 (Logging & Monitoring):
⽬标: 系统应具备基本的监控和故障排查能⼒。
实现建议: API层⾯应记录关键的请求⽇志和错误⽇志。应接⼊基础的应⽤性能监控（APM）服务，以便在出
现问题时能够快速定位。
</⽂档>